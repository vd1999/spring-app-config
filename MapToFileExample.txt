import org.apache.commons.io.FileUtils;

import java.io.File;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class MapToFileExample {

    public static void main(String[] args) {
        // Specify the parent folder
        String parentFolderName = "/path/to/parent/folder";

        // Specify the subfolder name
        String subfolderName = "mySubfolder";

        // Create a Map for demonstration purposes
        Map<String, List<String>> dataMap = new HashMap<>();
        dataMap.put("key1", Arrays.asList("value1", "value2"));

        // Write the data to a file
        writeDataToFile(parentFolderName, subfolderName, dataMap);

        // Read the stored data from the file
        Map<String, List<String>> loadedData = readDataFromFile(parentFolderName, subfolderName);

        // Display the loaded data
        System.out.println("Loaded Data:");
        loadedData.forEach((key, value) -> System.out.println(key + ": " + value));
    }

    private static void writeDataToFile(String parentFolderName, String subfolderName, Map<String, List<String>> dataMap) {
        try {
            // Create the parent folder if it doesn't exist
            File parentFolder = new File(parentFolderName);
            if (!parentFolder.exists()) {
                FileUtils.forceMkdir(parentFolder);
            }

            // Create the subfolder within the parent folder
            File subfolder = new File(parentFolder, subfolderName);
            FileUtils.forceMkdir(subfolder);

            // Specify the file path to write the data
            File dataFile = new File(subfolder, "data.txt");

            // Write the Map<String, List<String>> as a file in the subfolder
            FileUtils.write(dataFile, "key1=" + String.join(",", dataMap.get("key1")));
            
            System.out.println("Data stored successfully in: " + dataFile.getAbsolutePath());
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static Map<String, List<String>> readDataFromFile(String parentFolderName, String subfolderName) {
        Map<String, List<String>> loadedData = new HashMap<>();

        try {
            // Specify the file path to read the data
            File dataFile = new File(parentFolderName, subfolderName + "/data.txt");

            // Read the line from the file
            String line = FileUtils.readFileToString(dataFile);

            // Parse the line and populate the loadedData map
            String[] entry = line.split("=", 2);
            if (entry.length == 2) {
                String key = entry[0].trim();
                String[] values = entry[1].trim().split(",");
                loadedData.put(key, Arrays.asList(values));
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        return loadedData;
    }
}
